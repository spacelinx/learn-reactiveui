using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using AutoMapper;
using Learn.Core.Models;
using Learn.Core.Settings.Base;
using Plugin.Settings.Abstractions;
using ISettings = Learn.Core.Settings.Base.ISettings;

namespace Learn.Core.Common.Api.v1
{
    public class MobileApiMock : IMobileApi
    {
        private readonly IMapper _mapper;
        private const string UserProfileImage = "";
        private readonly Random _rnd;

        public MobileApiMock(ISettings settings, IMapper mapper)
        {
            _mapper = mapper;
            _rnd = new Random();
            Debug.WriteLine($"Settings url: {settings.BaseUrl}");
        }

        public async Task RandomWait()
        {
            await Task.Delay(_rnd.Next(200, 3000));
        }

        public async Task<IEnumerable<CourseSummaryDto>> GetCoursesForLoginViewAsync()
        {
            var courses = new List<Course>(new []{new Course{Id = Guid.NewGuid()}});

            await RandomWait();

            var items = _mapper.Map<IEnumerable<CourseSummaryDto>>(courses);
            return items;
        }

        public async Task<CourseSummaryDto> GetCourseAsync(Guid courseId)
        {
            var course = new List<Course>(new[] { new Course { Id = Guid.NewGuid() } }).First();

            await RandomWait();

            var item = _mapper.Map<CourseSummaryDto>(course);
            return item;
        }

        public async Task<IEnumerable<CourseSummaryDto>> GetCoursesLatestAsync()
        {
            var courses = new List<Course>(new[] { new Course { Id = Guid.NewGuid() } }).First();

            await RandomWait();

            var items = _mapper.Map<IEnumerable<CourseSummaryDto>>(courses);
            return items;
        }

        public async Task<IEnumerable<CourseSummaryDto>> GetCoursesRecommendedForUserAsync(string token, Guid userId)
        {
            var courses = new List<Course>(new[] { new Course { Id = Guid.NewGuid() } }).First();

            await RandomWait();

            var items = _mapper.Map<IEnumerable<CourseSummaryDto>>(courses);
            return items;
        }
    }
}
